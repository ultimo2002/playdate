name: Pipeline

on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Create .env file
        run: |
          echo "${{ secrets.DOTENV }}" > code/.env
          echo "${{ secrets.DOTENV }}" > .env
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Run tests
        run: |
          # -v means verbose (display PASSed functions/tests)
          PYTHONPATH=.. pytest -v

      # Log in to DigitalOcean Container Registry
      - name: Log in to DigitalOcean
        env:
          DIGITALOCEAN_ACCESS_TOKEN: ${{ secrets.DIGITALOCEAN_API_TOKEN }}
          DIGITALOCEAN_USERNAME: ${{ github.actor }}
        run: |
          echo "${DIGITALOCEAN_ACCESS_TOKEN}" | docker login registry.digitalocean.com -u "${DIGITALOCEAN_USERNAME}" --password-stdin

        # Build Docker Image with Git commit hash as tag
      - name: Build Docker image
        env:
          COMMIT_HASH: ${{ github.sha }}
        run: |
          docker build -t registry.digitalocean.com/timots/fast-api:${COMMIT_HASH} -t registry.digitalocean.com/devops-cicd/fast-api:latest .

        # Push Docker Image
      - name: Push Docker image to DigitalOcean
        env:
          COMMIT_HASH: ${{ github.sha }}
        run: |
          docker push --all-tags registry.digitalocean.com/timots/fast-api
          # Deploy to DigitalOcean Kubernetes
      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
        with:
            version: 'latest'
      - name: Configure kubeconfig
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBECONFIG }}
        run: |
              mkdir -p $HOME/.kube
              echo "${KUBE_CONFIG_DATA}" > $HOME/.kube/config

      - name: Update Deployment with New Image
        env:
          COMMIT_HASH: ${{ github.sha }}
        run: |
            kubectl set image deployment/website website=registry.digitalocean.com/timots/fast-api:${COMMIT_HASH} -n ns-website-db
